CCS PCH C Compiler, Version 4.084, 5333               04-fev-14 22:11

               Filename: C:\Users\Daniel\Documents\GitHub\PIC-101\Study 02 - ADC Example\Source Code\ADC_and_LED_blink.lst

               ROM used: 168 bytes (1%)
                         Largest free fragment is 32600
               RAM used: 6 (0%) at main() level
                         6 (0%) worst case
               Stack:    0 locations

*
0000:  GOTO   0004
.................... #include "ADC_and_LED_blink.h" 
.................... #include <18F4550.h> 
.................... //////// Standard Header file for the PIC18F4550 device //////////////// 
.................... #device PIC18F4550 
.................... #list 
....................  
.................... #device adc=8 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES WDT128                	//Watch Dog Timer uses 1:128 Postscale 
.................... #FUSES HSPLL                 	//High Speed Crystal/Resonator with PLL enabled 
.................... #FUSES NOPROTECT             	//Code not protected from reading 
.................... #FUSES NOBROWNOUT            	//No brownout reset 
.................... #FUSES BORV20                	//Brownout reset at 2.0V 
.................... #FUSES NOPUT                 	//No Power Up Timer 
.................... #FUSES NOCPD                 	//No EE protection 
.................... #FUSES STVREN                	//Stack full/underflow will cause reset 
.................... #FUSES NODEBUG               	//No Debug mode for ICD 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOWRT                 	//Program memory not write protected 
.................... #FUSES NOWRTD                	//Data EEPROM not write protected 
.................... #FUSES IESO                  	//Internal External Switch Over mode enabled 
.................... #FUSES FCMEN                 	//Fail-safe clock monitor enabled 
.................... #FUSES PBADEN                	//PORTB pins are configured as analog input channels on RESET 
.................... #FUSES NOWRTC                	//configuration not registers write protected 
.................... #FUSES NOWRTB                	//Boot block not write protected 
.................... #FUSES NOEBTR                	//Memory not protected from table reads 
.................... #FUSES NOEBTRB               	//Boot block not protected from table reads 
.................... #FUSES NOCPB                 	//No Boot Block code protection 
.................... #FUSES MCLR                  	//Master Clear pin enabled 
.................... #FUSES LPT1OSC               	//Timer1 configured for low-power operation 
.................... #FUSES NOXINST               	//Extended set extension and Indexed Addressing mode disabled (Legacy mode) 
.................... #FUSES PLL12                 	//Divide By 12(48MHz oscillator input) 
.................... #FUSES CPUDIV4               	//System Clock by 4 
.................... #FUSES USBDIV                	//USB clock source comes from PLL divide by 2 
.................... #FUSES VREGEN                	//USB voltage regulator enabled 
.................... #FUSES ICPRT                 	//ICPRT enabled 
....................  
.................... #use delay(clock=20000000) 
.................... #use rs232(baud=9600,parity=N,xmit=PIN_C6,rcv=PIN_C7,bits=8) 
....................  
....................  
....................  
.................... unsigned int signal_reading; 
....................  
.................... void main() 
.................... { 
0004:  CLRF   FF8
0006:  BCF    FD0.7
0008:  CLRF   FEA
000A:  CLRF   FE9
000C:  BSF    FB8.3
000E:  MOVLW  08
0010:  MOVWF  FAF
0012:  MOVLW  02
0014:  MOVWF  FB0
0016:  MOVLW  A6
0018:  MOVWF  FAC
001A:  MOVLW  90
001C:  MOVWF  FAB
001E:  MOVF   FC1,W
0020:  ANDLW  C0
0022:  IORLW  0F
0024:  MOVWF  FC1
0026:  MOVLW  07
0028:  MOVWF  FB4
....................  
....................    setup_adc_ports(AN0|VSS_VDD); 
002A:  MOVF   FC1,W
002C:  ANDLW  C0
002E:  IORLW  0E
0030:  MOVWF  FC1
....................    setup_adc(ADC_CLOCK_DIV_2); 
0032:  BCF    FC0.0
0034:  BCF    FC0.1
0036:  BCF    FC0.2
0038:  BCF    FC0.7
003A:  BSF    FC2.0
....................    setup_psp(PSP_DISABLED); 
003C:  BCF    F96.4
....................    setup_spi(SPI_SS_DISABLED); 
003E:  BCF    FC6.5
0040:  BCF    F94.7
0042:  BSF    F93.0
0044:  BCF    F93.1
0046:  MOVLW  01
0048:  MOVWF  FC6
004A:  MOVLW  00
004C:  MOVWF  FC7
....................    setup_wdt(WDT_OFF); 
004E:  BCF    FD1.0
....................    setup_timer_0(RTCC_INTERNAL); 
0050:  MOVLW  80
0052:  MOVWF  FD5
....................    setup_timer_1(T1_DISABLED); 
0054:  CLRF   FCD
....................    setup_timer_2(T2_DISABLED,0,1); 
0056:  MOVLW  00
0058:  MOVWF  FCA
005A:  MOVLW  00
005C:  MOVWF  FCB
....................    setup_comparator(NC_NC_NC_NC); 
005E:  MOVLW  07
0060:  MOVWF  FB4
0062:  MOVF   F92,W
0064:  MOVWF  F92
0066:  MOVLW  10
0068:  MOVWF  00
006A:  DECFSZ 00,F
006C:  BRA    006A
006E:  NOP   
0070:  MOVF   FB4,W
0072:  BCF    FA1.6
....................    setup_vref(FALSE); 
0074:  CLRF   FB5
.................... //Setup_Oscillator parameter not selected from Intr Oscillator Config tab 
....................  
....................    // TODO: USER CODE!! 
....................    set_adc_channel(0); 
0076:  MOVLW  00
0078:  MOVWF  01
007A:  MOVF   FC2,W
007C:  ANDLW  C3
007E:  IORWF  01,W
0080:  MOVWF  FC2
....................    while(true) 
....................    { 
....................       signal_reading = read_adc(); 
0082:  BSF    FC2.1
0084:  BTFSC  FC2.1
0086:  BRA    0084
0088:  MOVFF  FC4,05
....................       delay_us(50); 
008C:  MOVLW  53
008E:  MOVWF  00
0090:  DECFSZ 00,F
0092:  BRA    0090
....................        
....................       if(signal_reading >= 128) 
0094:  MOVF   05,W
0096:  SUBLW  7F
0098:  BC    00A0
....................       { 
....................          output_high(pin_b0); 
009A:  BCF    F93.0
009C:  BSF    F8A.0
....................       } 
....................       else 
009E:  BRA    00A4
....................       { 
....................          output_low(pin_b0); 
00A0:  BCF    F93.0
00A2:  BCF    F8A.0
....................       } 
....................    } 
00A4:  BRA    0082
....................  
.................... } 
00A6:  SLEEP 

Configuration Fuses:
   Word  1: CE3F   IESO FCMEN HSPLL PLL12 CPUDIV4 USBDIV
   Word  2: 0E39   NOBROWNOUT WDT128 NOWDT BORV20 NOPUT VREGEN
   Word  3: 8700   PBADEN CCP2C1 MCLR LPT1OSC
   Word  4: 00A1   STVREN NODEBUG NOLVP NOXINST ICPRT
   Word  5: C00F   NOPROTECT NOCPD NOCPB
   Word  6: E00F   NOWRT NOWRTD NOWRTC NOWRTB
   Word  7: 400F   NOEBTR NOEBTRB
